#ifndef GRACKLE_TOKEN_H
#define GRACKLE_TOKEN_H

// local includes
#include <warbler/data/string.h>

typedef enum TokenType
{
	// Generic
	TOK_EOF,
	TOK_IDENTIFIER,
	TOK_LPAREN,
	TOK_RPAREN,
	TOK_LBRACK,
	TOK_RBRACK,
	TOK_LBRACE,
	TOK_RBRACE,
	TOK_LANGBRACK,
	TOK_RANGBRACK,
	TOK_SEMICOLON,
	TOK_COLON,
	TOK_COMMA,
	TOK_DOT,
	TOK_ELIPSIS,
	TOK_AMPERSAND,
	TOK_PIPELINE,
	TOK_CARROT,
	TOK_LSHIFT,
	TOK_RSHIFT,
	TOK_EXCLAMATION,
	TOK_AND,
	TOK_OR,
	TOK_EQUALS,
	TOK_NEQUALS,
	TOK_LTOET,
	TOK_GTOET,
	TOK_SINGLE_ARROW,
	TOK_DOUBLE_ARROW,
	TOK_ASSIGN,
	TOK_ADD_ASSIGN,
	TOK_SUB_ASSIGN,
	TOK_MUL_ASSIGN,
	TOK_DIV_ASSIGN,
	TOK_MOD_ASSIGN,
	TOK_LSHIFT_ASSIGN,
	TOK_RSHIFT_ASSIGN,
	TOK_MODULUS,
	TOK_SLASH,
	TOK_ASTERISK,
	TOK_PLUS,
	TOK_POW,
	TOK_MINUS,
	TOK_INCREMENT,
	TOK_DECREMENT,
	TOK_INT_LITERAL,
	TOK_FLOAT_LITERAL,
	TOK_HEX_LITERAL,
	TOK_BIN_LITERAL,
	TOK_OCT_LITERAL,
	TOK_CHAR_LITERAL,
	TOK_STR_LITERAL,
	TOK_TRUE,
	TOK_FALSE,
	TOK_VAR,
	TOK_FUNC,
	TOK_RETURN,
	TOK_FOR,
	TOK_WHILE,
	TOK_LOOP,
	TOK_CONTINUE,
	TOK_BREAK,
	TOK_IF,
	TOK_ELSE,
	TOK_SWITCH,
	TOK_CASE,
	TOK_TYPE,
	TOK_STRUCT,
	TOK_ENUM,
	TOK_UNION,
	TOK_IMPORT,
	TOK_EXPORT,
	TOK_SCOPE,
	TOK_COUNT
}
TokenType;

typedef struct Token
{
	String str;
	size_t line;
	size_t col;
	TokenType type;
}
Token;

#endif

/*
int main()
{
return 0;
}
*/
